{"uuid":"5a91bdcd-44fb-4f31-98d3-8a09c39ec31a","historyId":"1677b48aba973608097ed65b83696016","status":"failed","statusDetails":{"message":"expect(received).toBe(expected) // Object.is equality\n\n- Expected  - 32\n+ Received  +  1\n\n- function elementErrorHandlerCallback(...args) {\n-         return fn(commandName, async function elementErrorHandlerCallbackFn() {\n-             const element = await implicitWait(this, commandName);\n-             this.elementId = element.elementId;\n-             this[ELEMENT_KEY] = element.elementId;\n-             try {\n-                 const result = await fn(commandName, commandFn).apply(this, args);\n-                 /**\n-                  * assume Safari responses like { error: 'no such element', message: '', stacktrace: '' }\n-                  * as `stale element reference`\n-                  */\n-                 const caps = getBrowserObject(this).capabilities;\n-                 if (caps && caps.browserName === 'safari' &&\n-                     result && result.error === 'no such element') {\n-                     const errorName = 'stale element reference';\n-                     const err = new Error(errorName);\n-                     err.name = errorName;\n-                     throw err;\n-                 }\n-                 return result;\n-             }\n-             catch (err) {\n-                 if (err.name === 'stale element reference') {\n-                     const element = await refetchElement(this, commandName);\n-                     this.elementId = element.elementId;\n-                     this.parent = element.parent;\n-                     return await fn(commandName, commandFn).apply(this, args);\n-                 }\n-                 throw err;\n-             }\n-         }).apply(this);\n-     }\n+ Dr. Peter Test","trace":"Error: expect(received).toBe(expected) // Object.is equality\n\n- Expected  - 32\n+ Received  +  1\n\n- function elementErrorHandlerCallback(...args) {\n-         return fn(commandName, async function elementErrorHandlerCallbackFn() {\n-             const element = await implicitWait(this, commandName);\n-             this.elementId = element.elementId;\n-             this[ELEMENT_KEY] = element.elementId;\n-             try {\n-                 const result = await fn(commandName, commandFn).apply(this, args);\n-                 /**\n-                  * assume Safari responses like { error: 'no such element', message: '', stacktrace: '' }\n-                  * as `stale element reference`\n-                  */\n-                 const caps = getBrowserObject(this).capabilities;\n-                 if (caps && caps.browserName === 'safari' &&\n-                     result && result.error === 'no such element') {\n-                     const errorName = 'stale element reference';\n-                     const err = new Error(errorName);\n-                     err.name = errorName;\n-                     throw err;\n-                 }\n-                 return result;\n-             }\n-             catch (err) {\n-                 if (err.name === 'stale element reference') {\n-                     const element = await refetchElement(this, commandName);\n-                     this.elementId = element.elementId;\n-                     this.parent = element.parent;\n-                     return await fn(commandName, commandFn).apply(this, args);\n-                 }\n-                 throw err;\n-             }\n-         }).apply(this);\n-     }\n+ Dr. Peter Test\n    at SecurePage.assert (C:\\Project\\typescript5\\test\\pageobjects\\praxispage.ts:46:29)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Context.<anonymous> (C:\\Project\\typescript5\\test\\specs\\test.e2e.ts:25:9)"},"stage":"finished","steps":[{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"87073aeb-1389-4742-8eb0-ef1410f40ebc-attachment.txt"},{"name":"Response","type":"text/plain","source":"df95dabf-189a-4e20-9371-d15b7f61f06f-attachment.txt"}],"parameters":[],"start":1691993904760,"name":"POST /session/:sessionId/element","stop":1691993904904},{"status":"passed","statusDetails":{},"stage":"finished","steps":[{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"926db38c-7339-4fa3-9e7d-1eb4dc13c512-attachment.txt"},{"name":"Response","type":"text/plain","source":"b498c503-72ca-4e40-a5b0-d258c927f184-attachment.txt"}],"parameters":[],"start":1691993904917,"name":"POST /session/:sessionId/element","stop":1691993905432},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Response","type":"text/plain","source":"07d5f2ee-4a24-442c-83ec-5ad79199e5b3-attachment.txt"}],"parameters":[],"start":1691993905432,"name":"DELETE /session/:sessionId/actions","stop":1691993905471},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"c5cc754a-60ef-4517-af36-2d47ea993767-attachment.txt"},{"name":"Response","type":"text/plain","source":"9a28ede6-f9a6-44bd-85a4-0a80ceff2165-attachment.txt"}],"parameters":[],"start":1691993905480,"name":"POST /session/:sessionId/execute/sync","stop":1691993905579},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"f3c8daed-4769-43ef-b1e0-9d40097a6bd9-attachment.txt"},{"name":"Response","type":"text/plain","source":"f1410280-7f6a-49ab-a8a7-7e83bda038bd-attachment.txt"}],"parameters":[],"start":1691993905589,"name":"POST /session/:sessionId/element","stop":1691993905956}],"attachments":[{"name":"Request","type":"text/plain","source":"67dbb094-a0e0-4882-9e32-ea7489fb6e97-attachment.txt"},{"name":"Response","type":"text/plain","source":"8e8d3008-a874-40da-9018-df143b883673-attachment.txt"}],"parameters":[],"start":1691993904913,"name":"POST /session/:sessionId/actions","stop":1691993905984},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"72754d44-0dae-4857-9940-7a3eb46731df-attachment.txt"},{"name":"Response","type":"text/plain","source":"13b54208-4aa5-4fbe-ac00-c2895edbd959-attachment.txt"}],"parameters":[],"start":1691993905995,"name":"POST /session/:sessionId/elements","stop":1691993906043},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"7f2758f7-8289-49b4-9d8b-c732a0ceab5a-attachment.txt"},{"name":"Response","type":"text/plain","source":"16751aa8-554a-4444-96d3-140f7a628e24-attachment.txt"}],"parameters":[],"start":1691993906058,"name":"POST /session/:sessionId/element","stop":1691993906222},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"fd942c95-4b02-409a-ac64-e482ce1d0b99-attachment.txt"},{"name":"Response","type":"text/plain","source":"4a80be31-a507-4cf3-a267-317ad7aff3fa-attachment.txt"}],"parameters":[],"start":1691993906229,"name":"POST /session/:sessionId/elements","stop":1691993906531},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"bffd1ade-f3ae-4792-80d8-963b35dc6063-attachment.txt"},{"name":"Response","type":"text/plain","source":"543cc0ba-7c40-4601-86af-f0ec2911dbc7-attachment.txt"}],"parameters":[],"start":1691993906540,"name":"POST /session/:sessionId/element","stop":1691993906646},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"e45a6e3b-caf5-4900-abd7-ec1d1bd86f6e-attachment.txt"},{"name":"Response","type":"text/plain","source":"db281f29-9425-41e6-8f06-d97fe194e676-attachment.txt"}],"parameters":[],"start":1691993906655,"name":"POST /session/:sessionId/elements","stop":1691993906727},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"addfdda3-025f-4847-bb57-6923daefed26-attachment.txt"},{"name":"Response","type":"text/plain","source":"14a6ef71-136f-426c-9b07-c620fee79d94-attachment.txt"}],"parameters":[],"start":1691993906733,"name":"POST /session/:sessionId/element","stop":1691993906770},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"616dfe55-87ab-4380-a648-a7bfff3bcb9c-attachment.txt"},{"name":"Response","type":"text/plain","source":"49250fd6-f8ef-4f2f-8efc-705675d1e029-attachment.txt"}],"parameters":[],"start":1691993906780,"name":"POST /session/:sessionId/elements","stop":1691993906816},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Request","type":"text/plain","source":"86548256-b6af-45b9-bc4c-3ca6c2bebc2c-attachment.txt"},{"name":"Response","type":"text/plain","source":"24baba56-95f9-4e56-a6dc-49b42ea44a16-attachment.txt"}],"parameters":[],"start":1691993906820,"name":"POST /session/:sessionId/element","stop":1691993906855},{"status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"Screenshot","type":"image/png","source":"f5d45cd9-7a44-40cd-a2c3-76bfe6883e4d-attachment.png"},{"name":"Response","type":"application/json","source":"ebdfb88e-9569-419b-bf0e-c1a04eba120d-attachment.json"}],"parameters":[],"start":1691993906900,"name":"GET /session/:sessionId/screenshot","stop":1691993907306}],"attachments":[],"parameters":[{"name":"browser","value":"chrome-115.0.5790.170"}],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"wdio"},{"name":"package","value":"C:.Project.typescript5.test.specs.test.e2e.ts"},{"name":"thread","value":"0-0"},{"name":"suite","value":"assertion"},{"name":"feature","value":"assertion"}],"links":[],"start":1691993904757,"name":"should validate the drname an adress","stop":1691993907309}